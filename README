Pathfinding in a Maze:

    Given a maze represented as a binary matrix, find a path from the top-left corner (0, 0) to the bottom-right corner (n-1, m-1) using BFS or DFS. Return the path if it exists.
Problem Overview

You want to find a path from the top-left corner of a maze (0, 0) to the bottom-right corner (n-1, m-1) in a binary matrix. The maze consists of:

    0: Open path (you can move here).
    1: Wall or obstacle (you cannot move here).

Approach

    Representing the Maze:
        Use a 2D list (matrix) to represent the maze. For example:

    maze = [
        [0, 0, 1, 0, 0],
        [0, 1, 1, 1, 0],
        [0, 0, 0, 1, 0],
        [1, 1, 0, 0, 0],
        [0, 0, 1, 1, 0]
    ]

